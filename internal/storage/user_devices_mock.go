// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/WendelHime/hydroponics-metrics-collector/internal/storage (interfaces: UserDeviceRepository)

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserDeviceRepository is a mock of UserDeviceRepository interface.
type MockUserDeviceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserDeviceRepositoryMockRecorder
}

// MockUserDeviceRepositoryMockRecorder is the mock recorder for MockUserDeviceRepository.
type MockUserDeviceRepositoryMockRecorder struct {
	mock *MockUserDeviceRepository
}

// NewMockUserDeviceRepository creates a new mock instance.
func NewMockUserDeviceRepository(ctrl *gomock.Controller) *MockUserDeviceRepository {
	mock := &MockUserDeviceRepository{ctrl: ctrl}
	mock.recorder = &MockUserDeviceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDeviceRepository) EXPECT() *MockUserDeviceRepositoryMockRecorder {
	return m.recorder
}

// AddDeviceToUser mocks base method.
func (m *MockUserDeviceRepository) AddDeviceToUser(arg0 context.Context, arg1, arg2 string, arg3 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDeviceToUser", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDeviceToUser indicates an expected call of AddDeviceToUser.
func (mr *MockUserDeviceRepositoryMockRecorder) AddDeviceToUser(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDeviceToUser", reflect.TypeOf((*MockUserDeviceRepository)(nil).AddDeviceToUser), arg0, arg1, arg2, arg3)
}

// CreateUserDevice mocks base method.
func (m *MockUserDeviceRepository) CreateUserDevice(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserDevice", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserDevice indicates an expected call of CreateUserDevice.
func (mr *MockUserDeviceRepositoryMockRecorder) CreateUserDevice(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserDevice", reflect.TypeOf((*MockUserDeviceRepository)(nil).CreateUserDevice), arg0, arg1, arg2)
}

// GetDevicesFromUser mocks base method.
func (m *MockUserDeviceRepository) GetDevicesFromUser(arg0 context.Context, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevicesFromUser", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDevicesFromUser indicates an expected call of GetDevicesFromUser.
func (mr *MockUserDeviceRepositoryMockRecorder) GetDevicesFromUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevicesFromUser", reflect.TypeOf((*MockUserDeviceRepository)(nil).GetDevicesFromUser), arg0, arg1)
}
